Декораторы

  ==========  1  ==========

Напишите декоратор для оценки времени выполнения функции.

Используйте модуль time, функции perf_counter и perf_counter_ns.



  ==========  2  ==========

Напишите декоратор, который логирует вызов функции в файл-журнал, используя атрибут объекта функции __name__.

Примените его к каждой функции в проекте Крестики-Нолики 
(полный код: ветка functional в репозитории https://github.com/GennDALF/Python115-project1.git)

Запустите проект, сыграйте одну партию с ботом, выйдите из приложения с помощью команды.
Затем откройте файл-журнал и посчитайте, какие функции и сколько раз вызывались.



  ==========  3  ==========

Напишите класс Person с атрибутами экземпляра name, login, email. Напишите класс TxtMsgSender с одним статическим методом для отправки сообщений. Метод должен принимать объект класса Person и текст сообщения

Напишите декоратор-шпион.
Он должен подключаться к методу для передачи сообщений, перехватывать его аргументы и сохранять их в отдельном файле с отметкой времени. 
При парсинге аргументов метода используйте атрибуты объектов __name__, __dict__ и __str__ с обработчиком исключений



  =========================

Код каждой решённой задачи загружается в репозиторий в виде отдельного файла с именем, соответствующем номеру задачи.

Функции, классы и методы (кроме "магических") документируются.
Параметры функций и методов (кроме self) аннотируются.

В сервис Журнал отправляется сообщение о выполнении задании со ссылкой на репозиторий.